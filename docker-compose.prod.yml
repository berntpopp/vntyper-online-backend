# docker-compose.prod.yml
services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    image: vntyper_proxy:2.0.0
    container_name: vntyper_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/ssl/certs/vntyper:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    env_file:
      - .env.production
    networks:
      - vntyper_network

  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
    container_name: vntyper_certbot
    volumes:
      - /etc/ssl/certs/vntyper:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    env_file:
      - .env.production
    depends_on:
      - proxy
    networks:
      - vntyper_network

  backend_api:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:latest
    container_name: vntyper_backend_api
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    env_file:
      - ${ENV_FILE:-.env.production}
    volumes:
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 60s
      timeout: 5s
      retries: 3

networks:
  vntyper_network:
    driver: bridge

# docker-compose.dev.yml
# Development overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  backend_api:
    # Override entrypoint and command to use fastapi dev with auto-reload (2025 best practice)
    # Note: fastapi dev has --reload enabled by default, no need to specify it
    entrypoint: ["/bin/bash", "-c"]
    command: ["source /opt/conda/etc/profile.d/conda.sh && conda run -n vntyper fastapi dev app/main.py --host 0.0.0.0 --port 8000"]
    volumes:
      # Mount application code for live reload
      - ./backend/docker/app:/opt/vntyper/app:rw
      # Keep input/output volumes
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    environment:
      # Enable Python unbuffered output for real-time logs
      - PYTHONUNBUFFERED=1
      # Enable watchfiles for better file watching (used by fastapi dev)
      - WATCHFILES_FORCE_POLLING=false
    # Remove restart policy for development (easier debugging)
    restart: "no"

  # Celery workers - Note: Celery doesn't support auto-reload by default
  # You must manually restart workers after code changes:
  # docker-compose -f docker-compose.yml -f docker-compose.dev.yml restart backend_worker backend_worker_vntyper
  backend_worker_vntyper:
    volumes:
      - ./backend/docker/app:/opt/vntyper/app:rw
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    environment:
      - PYTHONUNBUFFERED=1
    restart: "no"

  backend_worker:
    volumes:
      - ./backend/docker/app:/opt/vntyper/app:rw
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    environment:
      - PYTHONUNBUFFERED=1
    restart: "no"

  backend_beat:
    volumes:
      - ./backend/docker/app:/opt/vntyper/app:rw
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    environment:
      - PYTHONUNBUFFERED=1
    restart: "no"

  # Disable proxy in development (use Python http.server for frontend)
  # and direct access to backend_api:8000
  proxy:
    profiles:
      - production  # Only run proxy in production profile

  frontend:
    profiles:
      - production  # Only run frontend container in production profile

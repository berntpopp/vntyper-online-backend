services:
  redis:
    image: redis:6-alpine
    container_name: vntyper_online_redis
    networks:
      - vntyper_network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-defaultpassword}", "--appendonly", "yes"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis_data:/data

  backend_api:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.16
    container_name: vntyper_backend_api
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    env_file:
      - .env.local
    volumes:
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network
    ports:
      - "8000:8000"

  # Dedicated worker for run_vntyper_job
  backend_worker_vntyper:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.16
    container_name: vntyper_online_worker_vntyper
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info", "--concurrency=1", "-Q", "vntyper_queue"]
    env_file:
      - .env.local
    volumes:
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network

  # Worker for other tasks
  backend_worker:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.16
    container_name: vntyper_online_worker
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    env_file:
      - .env.local
    volumes:
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network

  backend_beat:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.16
    container_name: vntyper_online_beat
    command: ["celery", "-A", "app.celery_app", "beat", "--loglevel=info"]
    env_file:
      - .env.local
    volumes:
      - ${INPUT_VOLUME}:/opt/vntyper/input
      - ${OUTPUT_VOLUME}:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: vntyper_frontend:2.0.0-alpha.16
    container_name: vntyper_online_frontend
    networks:
      - vntyper_network

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    image: vntyper_proxy:2.0.0-alpha.17
    container_name: vntyper_proxy
    ports:
      - "80:80"  # HTTP only in development
    volumes:
      - ./proxy/nginx.conf.template.http:/etc/nginx/conf.d/nginx.conf.template.http:ro
      - ./proxy/nginx.conf.template.ssl:/etc/nginx/conf.d/nginx.conf.template.ssl:ro
    env_file:
      - .env.local
    entrypoint: ["/entrypoint.sh"]
    depends_on:
      - frontend
      - backend_api
    networks:
      - vntyper_network

networks:
  vntyper_network:
    driver: bridge

volumes:
  redis_data:

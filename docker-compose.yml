version: '3.8'

services:
  redis:
    image: redis:6-alpine
    container_name: vntyper_online_redis
    ports:
      - "6379:6379"
    networks:
      - vntyper_network

  backend_api:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.7
    container_name: vntyper_backend_api
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MAX_RESULT_AGE_DAYS=7
    volumes:
      - /mnt/c/development/VNtyper/out/download:/opt/vntyper/input
      - /mnt/c/development/VNtyper/out/output:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network
    ports:
      - "8000:8000"

  backend_worker:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.7
    container_name: vntyper_online_worker
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MAX_RESULT_AGE_DAYS=7
    volumes:
      - /mnt/c/development/VNtyper/out/download:/opt/vntyper/input
      - /mnt/c/development/VNtyper/out/output:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network

  backend_beat:
    build:
      context: ./backend/docker
      dockerfile: Dockerfile
    image: vntyper:2.0.0-alpha.7
    container_name: vntyper_online_beat
    command: ["celery", "-A", "app.celery_app", "beat", "--loglevel=info"]
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MAX_RESULT_AGE_DAYS=7
    volumes:
      - /mnt/c/development/VNtyper/out/download:/opt/vntyper/input
      - /mnt/c/development/VNtyper/out/output:/opt/vntyper/output
    depends_on:
      - redis
    networks:
      - vntyper_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: vntyper_frontend:2.0.0-alpha.7
    container_name: vntyper_online_frontend
    environment:
      - API_URL=/api # Set API URL to proxy via Nginx
    depends_on:
      - backend_api
    networks:
      - vntyper_network

  proxy:
    image: nginx:alpine
    container_name: vntyper_proxy
    ports:
      - "3000:80"  # Expose Nginx on port 3000
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend_api
    networks:
      - vntyper_network

networks:
  vntyper_network:
    driver: bridge
